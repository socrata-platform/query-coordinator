com.socrata.query-coordinator {
  curator.ensemble = {{ ZOOKEEPER_ENSEMBLE }}
  service-advertisement.address = "{{ ARK_HOST }}"
  network.port = 6030
  liveness-check.port = 6031

  all-secondary-instance-names = [{{ SECONDARY_INSTANCES }}]

  query-timeout = {{ QUERY_TIMEOUT }}

  {% if CACHE_DATABASE_HOST is defined and CACHE_DATABASE_PORT is defined and CACHE_DATABASE_PASSWORD is defined and CACHE_DATABASE_USERNAME is defined -%}
  cache {
    type = "postgresql"
    database {
      host = {{CACHE_DATABASE_HOST}}
      port = {{CACHE_DATABASE_PORT}}
      database = {{CACHE_DATABASE_DATABASE}}
      username = {{CACHE_DATABASE_USERNAME}}
      password = "{{CACHE_DATABASE_PASSWORD}}"
    }
  }
  {%- endif %}

  metrics {
    log-metrics = {{ LOG_METRICS }}
    enable-graphite = {{ ENABLE_GRAPHITE }}
    graphite-host = "{{ GRAPHITE_HOST }}"
    graphite-port = "{{ GRAPHITE_PORT }}"
  }
}


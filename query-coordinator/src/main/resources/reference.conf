com.socrata.query-coordinator {
  log4j {
    rootLogger = [ INFO, console ]
    appender {
      console.class = org.apache.log4j.ConsoleAppender
      console.props {
        layout.class = org.apache.log4j.PatternLayout
        layout.props {
          ConversionPattern = "%d %p [%t] (%X{X-Socrata-RequestId}) [%X{X-Socrata-Resource}] %c{1} %m%n"
        }
      }
    }
  }

  network {
    port = 0
  }

  curator {
    namespace = "com.socrata/soda"
    session-timeout = 40s
    connect-timeout = 5s
    base-retry-wait = 100ms
    max-retry-wait = 10s
    max-retries = 29
  }

  service-advertisement {
    service-base-path = "/services"
    name = query-coordinator
    address = "localhost"
  }

  liveness-check {
    ## Bind to address of the specific hostname or IP if specified, otherwise use wildcard. This should be set on
    ##  systems with multiple interfaces on the same network or you may risk sending responses from the wrong IP.
    #address = "localhost"
    ## Listen on port if specified, otherwise use ephemeral port.
    #port = 6031
  }

  metrics {
    # Should be unique for each service
    prefix = "com.socrata.query.coordinator"
    # log-metrics = true
    # enable-graphite = true
  }

  threadpool {
    min-threads = 10
    max-threads = 100
    idle-timeout = 30 s
    # Based on throughput of 50 req/sec * 10 seconds for recovery
    queue-length = 500
  }

  connect-timeout = 5s
  get-schema-timeout = 10s
  query-timeout = 2m
  all-secondary-instance-names = [pg.primus]
  # how long we cache information about if a secondary has or doesn't have a dataset
  secondary-discovery-expiration = 2m
  # Once we reach this many queries where we can't find any secondary instance to access,
  # we stop retrying them all each query and just let them time out normally.
  dataset-max-nope-count = 1000

  # max-rows is left undefined because it can be undefined.
  # When configured, a soql cannot have limit > max-rows.
  # This value should be >= default-rows-limit
  # max-rows = 10000

  default-rows-limit = 1000
}
